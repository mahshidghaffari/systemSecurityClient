after building project 

for axios (servis ) in case if it didn't initial at the bulding stage

	1 - mkdir services
	2 - touch index.js
	3 - touch get.service.js
	4 - touch post_put.service.js
	
	-------------------------- index.js
	
	import axios from "axios";

	//make the URL universal [to do]
	// axios.defaults.baseURL = process.env.VUE_APP_URL_API;

	import  {getService}  from "./get.service"
	import {pService} from "./post_put.service "



	export const service = ({
	  modules: {
	    getService,
	    pService
	  }
	});

  	---------------------------------------------get.servise.js
  	const getService_one = {

	}

	const getService_two = {

	}

	export const getService = {
	    namespaced: true,
	    getService_one,
	    getService_two
	}
	
	
	------------------------------------------------post_put.service.js
	
		const pService_one = {

		}

		const pService_two = {

		}

		export const pService = {
		    namespaced: true,
		    pService_one,
		    pService_two
		}
		
________________________________________________________________________ setting up store

	1- mkdir index.js
	2- touch first.module.js
	3- touch second.module.js
	-----------------------------------------index.js
	

	import  {firstModule}  from "./first.module"
	import  {secondModule}  from "./second.module"

	import {} from "./Order.module"

	Vue.use(Vuex)


	export const store = new Vuex.Store({
	  modules: {
	    firstModule,
	    secondModule
	  }
	});
	
	-----------------------------------------------------main.js
	import { store } from "./store";   // in hatman baya {} in bashe vagran errore state undefine mide
	
	new Vue({
	  router,
	  store,
	  render: (h) => h(App),
	}).$mount("#app");

	------------------------------------------------first.module.js
	
	// import { services } from "../Services/Services";
	const state = {
	    desertList: [],
	}

	const mutations = {

	    // getPizzaSuccess(state, data) {
		// state.pizzaList = data.data
	    // },
	}

	// dispatch action
	const actions = {
	    // getPizza({ commit }) {
	    //     services.getPizza()
	    //         .then(response => {
	    //             commit('getPizzaSuccess', response.data)
	    //         }, error => {
	    //             console.log(error)
	    //         }

	    //         )
	    // },

	}


	export const firstModule  = {
	    namespaced: true,
	    state,
	    mutations,
	    actions
	}
			
			
	
________________________________________________add bootstrap 

in src directory run :  
npm i bootstrap-vue

* refresh the folder project 
	check for the ok instalation: ! when u serch boostrap in the project you should be 		able to see in package.lock.json and package.json
	
next Step: 

add below in  in the the main.js

	import { BootstrapVue, IconsPlugin } from "bootstrap-vue";

	import "bootstrap/dist/css/bootstrap.css";
	import "bootstrap-vue/dist/bootstrap-vue.css";

	// // Make BootstrapVue available throughout your project
	Vue.use(BootstrapVue);

	// Optionally install the BootstrapVue icon components plugin
	Vue.use(IconsPlugin);
	
test :     <b-button variant="danger">Button</b-button>

easyyyyyyyyyyyyyyyy :)
________________________________________________adding fav icon
	in the src dir
Install the core package and icon content.

	$ npm i --save @fortawesome/fontawesome-svg-core
	$ npm i --save @fortawesome/free-solid-svg-icons
Using Vue 2.x

	$ npm i --save @fortawesome/vue-fontawesome@latest
		
Import in main.js

import { library } from "@fortawesome/fontawesome-svg-core";
import { fas } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/vue-fontawesome";

library.add(fas);
Vue.component('font-awesome-icon',FontAwesomeIcon);


test:  <font-awesome-icon :icon="['fas', 'robot']" />
		
		
		
		
		
		
		
